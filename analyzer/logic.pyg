#!/usr/bin/env python

"""
@author		:	Rajan Khullar
@created	:	04/02/16
@updated	:	04/30/16
"""

import tpg
from pwrap import *

class magic(tpg.Parser):
	r"""

	separator	spaces	:	'\s+'					;
	token		natural	:	'\d+'					$ int
	token		string	:	'\'[a-zA-Z0-9_\s]*\''	$ str
	token		output	:	'print'					$ ops
	token		assign	:	'='						$ ops
	token		append	:	'<<'					$ ops
	token		var		:	'[a-zA-Z_]+'			$ str
	token		type	:	'\$[a-zA-Z_]+'			$ typ
	token		add		:	'[+-]'					$ ops

#	token		type	:	'\$int|\$str'			$ typ

	START/x		->	LIST/s										$ x = s
				|	PRINT/s										$ x = s
				|	ASSIGN/s									$ x = s
				|	APPEND/s									$ x = s
				;
	PRINT/x		->	output/op EXPRL/e							$ x = op(e)		$;

	LIST/x		->	var/v assign type/t '\[\]'					$ x = list(v,t)	$;

	APPEND/x	->	var/v append/op EXPR/e						$ x = op(v,e)	$;

	ASSIGN/x	->	var/v assign/op EXPR/e						$ x = op(v,e)
				|	var/v '\[' natural/n '\]' assign/op EXPR/e	$ x = op(v,n,e)
				;
	EXPRL/l		->	EXPR/a										$ l = [a]
				   (
				   	',' EXPR/a									$ l.append(a)
				   )*
				;
	EXPR/x		->	natural/n									$ x = expr('natural', n)
				|	string/s									$ x = expr('string', s)
				|	var/v '\[' natural/n '\]'					$ x = expr('list', v, n)
				|	var/v										$ x = expr('var', v)
				;
	"""

	""" Alternative / Rejected Regular Expressions:
	EXPRL/l	->	EXPR/a $l=[a]$ (EXPR/a $l.append(a)$)*;
	"""


if __name__ == '__main__':
	m = magic()
	def p(s):
		print s
	t = lambda s: p(m(s))

	t("print 1")
	t("print 99")

	# print strings
	t("print ''")
	t("print 'one'")
	t("print '0N_96b'")

	# print lists
	t("print a")
	t("print b")

	# print lists	LIST/x		->	var/v '\:' type/t '\[\]'					$ x = list(v,t) $;
	t("print 0, 1, 2, 3")
	t("print 'a', 'b', 'c', 'd'")

	# assignments
	t("a = 5")
	t("b[3] = 'bye'")

	# print list items
	t("print a[2]")

	# create lists
	t("c = $int[]")
	t("d = $box[]")

	## append to lists
	t("s << 'hi'")
